name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'
      - 'feature/*'
      - 'refs/tags/*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      - name: Get version from csproj
        run: |
          VERSION=$(xmlstarlet sel -t -v "/Project/PropertyGroup/Version" Respify/Respify.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        id: get_version

      - name: Restore dependencies
        run: dotnet restore Respify/Respify.csproj

      - name: Build Respify project
        run: dotnet build Respify/Respify.csproj --no-restore --configuration Release

      - name: Restore tests dependencies
        run: dotnet restore Respify.Tests/Respify.Tests.csproj

      - name: Build Respify.Tests project
        run: dotnet build Respify.Tests/Respify.Tests.csproj --no-restore --configuration Release

      - name: Run tests
        run: dotnet test Respify.Tests/Respify.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage"

  sonarcloud-analysis:
    runs-on: windows-latest
    needs: build-and-test

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
  
  enforce-gitflow:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Enforce GitFlow
        run: |
          branch=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          if [[ "$branch" =~ ^(main|develop|release\/.*)$ ]]; then
            echo "Branch $branch is allowed."
          else
            echo "Branch $branch is not allowed."
            exit 1