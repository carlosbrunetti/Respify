name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

  sonar_scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          scannerMode: CLI
          token: ${{ secrets.SONAR_TOKEN }}
          url: ${{ secrets.SONAR_HOST_URL }}
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            

  publish:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    needs: [build, sonar_scan]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Extract version
        id: extract_version
        run: |
          version=$(cat Respify/Respify.csproj | grep '<Version>' | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
          echo "##[set-output name=VERSION;]$version"

      - name: Publish to NuGet
        run: dotnet nuget push Respify/bin/Release/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}